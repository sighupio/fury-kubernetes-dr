# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRoleBinding
# metadata:
#   creationTimestamp: null
#   labels:
#     component: velero
#   name: velero-kube-system
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: cluster-admin
# subjects:
# - kind: ServiceAccount
#   name: velero
#   namespace: kube-system
---
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   creationTimestamp: null
#   labels:
#     component: velero
#   name: velero
#   namespace: kube-system
---
# apiVersion: velero.io/v1
# kind: BackupStorageLocation
# metadata:
#   creationTimestamp: null
#   labels:
#     component: velero
#   name: default
#   namespace: kube-system
# spec:
#   default: true
#   objectStorage:
#     bucket: my-bucket
#   provider: aws
---
apiVersion: velero.io/v1
kind: VolumeSnapshotLocation
metadata:
  creationTimestamp: null
  labels:
    component: velero
  name: default
  namespace: kube-system
spec:
  provider: aws
---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   creationTimestamp: null
#   labels:
#     component: velero
#   name: velero
#   namespace: kube-system
# spec:
#   selector:
#     matchLabels:
#       deploy: velero
#   strategy: {}
#   template:
#     metadata:
#       annotations:
#         prometheus.io/path: /metrics
#         prometheus.io/port: "8085"
#         prometheus.io/scrape: "true"
#       creationTimestamp: null
#       labels:
#         component: velero
#         deploy: velero
#     spec:
#       containers:
#       - args:
#         - server
#         - --features=
#         - --uploader-type=kopia
#         command:
#         - /velero
#         env:
#         - name: VELERO_SCRATCH_DIR
#           value: /scratch
#         - name: VELERO_NAMESPACE
#           valueFrom:
#             fieldRef:
#               fieldPath: metadata.namespace
#         - name: LD_LIBRARY_PATH
#           value: /plugins
#         image: velero/velero:v1.15.0
#         imagePullPolicy: IfNotPresent
#         name: velero
#         ports:
#         - containerPort: 8085
#           name: metrics
#         resources:
#           limits:
#             cpu: "1"
#             memory: 512Mi
#           requests:
#             cpu: 500m
#             memory: 128Mi
#         volumeMounts:
#         - mountPath: /plugins
#           name: plugins
#         - mountPath: /scratch
#           name: scratch
#       initContainers:
#       - image: velero/velero-plugin-for-aws:1.15.0
#         imagePullPolicy: IfNotPresent
#         name: velero-velero-plugin-for-aws
#         resources: {}
#         volumeMounts:
#         - mountPath: /target
#           name: plugins
#       restartPolicy: Always
#       serviceAccountName: velero
#       volumes:
#       - emptyDir: {}
#         name: plugins
#       - emptyDir: {}
#         name: scratch
---       
# apiVersion: apps/v1
# kind: DaemonSet
# metadata:
#   creationTimestamp: null
#   labels:
#     component: velero
#   name: node-agent
#   namespace: kube-system
# spec:
#   selector:
#     matchLabels:
#       name: node-agent
#   template:
#     metadata:
#       creationTimestamp: null
#       labels:
#         component: velero
#         name: node-agent
#     spec:
#       containers:
#       - args:
#         - node-agent
#         - server
#         - --features=
#         command:
#         - /velero
#         env:
#         - name: NODE_NAME
#           valueFrom:
#             fieldRef:
#               fieldPath: spec.nodeName
#         - name: VELERO_NAMESPACE
#           valueFrom:
#             fieldRef:
#               fieldPath: metadata.namespace
#         - name: VELERO_SCRATCH_DIR
#           value: /scratch
#         image: velero/velero:v1.15.0
#         imagePullPolicy: IfNotPresent
#         name: node-agent
#         ports:
#         - containerPort: 8085
#           name: metrics
#         resources: {}
#         securityContext:
#           privileged: false
#         volumeMounts:
#         - mountPath: /host_pods
#           mountPropagation: HostToContainer
#           name: host-pods
#         - mountPath: /var/lib/kubelet/plugins
#           mountPropagation: HostToContainer
#           name: host-plugins
#         - mountPath: /scratch
#           name: scratch
#       securityContext:
#         runAsUser: 0
#       serviceAccountName: velero
#       volumes:
#       - hostPath:
#           path: /var/lib/kubelet/pods
#         name: host-pods
#       - hostPath:
#           path: /var/lib/kubelet/plugins
#         name: host-plugins
#       - emptyDir: {}
#         name: scratch
#   updateStrategy: {}